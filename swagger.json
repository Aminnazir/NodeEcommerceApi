{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple e-commerce API",
    "version": "1.0.0",
    "title": "E-commerce API"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "auth",
      "description": "Authentication and Authorization"
    },
    {
      "name": "products",
      "description": "Product Management"
    },
    {
      "name": "carts",
      "description": "Cart Management"
    },
    {
      "name": "orders",
      "description": "Order Placement"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register a new user",
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login a user",
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["products"],
        "summary": "Create a new product",
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      },
      "get": {
        "tags": ["products"],
        "summary": "Retrieve a list of all products or filter by category",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "type": "string",
            "description": "Category to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/products/{productId}": {
      "put": {
        "tags": ["products"],
        "summary": "Update the details of an existing product",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "type": "integer",
            "required": true,
            "description": "ID of the product to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Product object with updated details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      },
      "delete": {
        "tags": ["products"],
        "summary": "Delete a product",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "type": "integer",
            "required": true,
            "description": "ID of the product to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      }
    },
    "/carts": {
      "post": {
        "tags": ["carts"],
        "summary": "Create a new cart for a user",
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Cart object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      }
    },
    "/carts/{cartId}/items": {
      "post": {
        "tags": ["carts"],
        "summary": "Add a product to the user's cart with a specified quantity",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "type": "integer",
            "required": true,
            "description": "ID of the cart"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Cart item object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product added to cart successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      }
    },
    "/carts/{cartId}/items/{itemId}": {
      "delete": {
        "tags": ["carts"],
        "summary": "Remove a product from the user's cart",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "type": "integer",
            "required": true,
            "description": "ID of the cart"
          },
          {
            "in": "path",
            "name": "itemId",
            "type": "integer",
            "required": true,
            "description": "ID of the cart item to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Product removed from cart successfully"
          },
          "404": {
            "description": "Cart item not found"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      }
    },
    "/carts/{cartId}": {
      "get": {
        "tags": ["carts"],
        "summary": "Retrieve the contents of the user's cart",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "type": "integer",
            "required": true,
            "description": "ID of the cart"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CartItem"
              }
            }
          },
          "404": {
            "description": "Cart not found"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      }
    },
    "/orders": {
      "post": {
        "tags": ["orders"],
        "summary": "Place an order by converting the contents of the user's cart into an order",
        "description": "",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Order object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order placed successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      }
    },
    "/orders/{orderId}": {
      "get": {
        "tags": ["orders"],
        "summary": "Retrieve order details by order ID",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "type": "integer",
            "required": true,
            "description": "ID of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "Bearer": []
        }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "required": ["name", "price"],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "category": {
          "type": "string"
        }
      }
    },
    "Cart": {
      "type": "object",
      "required": ["user_id"],
      "properties": {
        "user_id": {
          "type": "integer"
        }
      }
    },
    "CartItem": {
      "type": "object",
      "required": ["cart_id", "product_id", "quantity"],
      "properties": {
        "cart_id": {
          "type": "integer"
        },
        "product_id": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "Order": {
      "type": "object",
      "required": ["user_id", "total_cost"],
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "total_cost": {
          "type": "number",
          "format": "float"
        }
      }
    }
  }
}
